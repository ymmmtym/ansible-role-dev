- name: Remove installed docker
  apt:
    name: '{{ item }}'
    state: absent
  become: yes
  loop:
    - docker
    - docker-engine
    - docker.io
    - containerd
    - runc
  when: (docker_version.failed) or
        (docker_version.stdout is version_compare(docker.version, '<'))

- name: Add docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
  become: yes

- name: Install basic list of packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  become: yes
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common

- name: Add apt repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
  become: yes

- name: Install Docker packages
  apt:
    name: "{{ item }}"
    state: present
  become: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: Add user to docker group
  user:
    name: "{{ ansible_user_id }}"
    group: docker
    append: yes
  become: yes

- name: Ensure docker service is enabled
  systemd:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: Install docker-compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose.version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
    dest: /usr/local/bin/docker-compose
    mode: +x
  become: yes
  when: (docker_compose_version.failed) or
        (docker_compose_version.stdout is version_compare(docker_compose.version, '<'))